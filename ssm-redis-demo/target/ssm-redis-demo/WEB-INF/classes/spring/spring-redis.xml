<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	default-lazy-init="true"
	xsi:schemaLocation="http://www.springframework.org/schema/cache 
						http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.1.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <description>Jedis配置</description>

    <!-- Redis 配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}" 
          p:port="${redis.port}" 
          p:usePool="true"
          p:timeout="${redis.timeout}" 
          p:password="${redis.pass}" 
          p:database="${redis.default.db}"
          p:poolConfig-ref="jedisPoolConfig"/>

    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	<!-- 
    <bean id="intRedisSerializer"
          class="com.hxn.component.global.common.redis.IntRedisSerializer"/>
	 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnectionFactory"
          p:keySerializer-ref="stringRedisSerializer"
          p:valueSerializer-ref="jdkSerializationRedisSerializer"/>
    <!-- <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" 
   		  p:connectionFactory-ref="jedisConnectionFactory"/> -->
   		  <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
   		  	<property name="connectionFactory" ref="jedisConnectionFactory" />
   		  </bean>
	<!-- 
    <bean id="redisNumTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnectionFactory"
          p:keySerializer-ref="stringRedisSerializer"
          p:valueSerializer-ref="intRedisSerializer"/>
	 -->
	<!-- <cache:annotation-driven cache-manager="cacheManager" /> -->
	 
	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" 
	c:redisOperations-ref="redisTemplate"> 
        <property name="defaultExpiration" value="600"/>
        <property name="usePrefix" value="true"/>
        <property name="expires">
            <map key-type="java.lang.String" value-type="java.lang.Long">
                <entry key="halfHour" value="1800"/>
                <entry key="hour" value="3600"/>
                <entry key="dict" value="86400"/>
                <entry key="office" value="86400"/>
                <entry key="region" value="86400"/>
                <entry key="user" value="86400"/>
                <entry key="menu" value="86400"/>
            </map>
        </property>
	</bean> -->
	<bean id="supportRedisUtils" class="com.gu.utils.SupportRedisUtils"/>
</beans>